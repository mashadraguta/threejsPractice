import*as THREE from"three";import{camera,scene,canvas,renderer}from"./basics";import{GParams,palette}from"./particlesGUI";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";const axesHelper=new THREE.AxesHelper(2e3);axesHelper.setColors("red","yellow","blue"),scene.add(axesHelper);const controls=new OrbitControls(camera,renderer.domElement),loader=new THREE.TextureLoader;loader.setPath("/textures/particles/");const mat4=loader.load("4.png");let stars,bufferGeometry,starMat;export const generateGalaxy=()=>{stars&&scene.remove(stars),bufferGeometry=new THREE.BufferGeometry;let e=new Float32Array(3*GParams.count),r=new Float32Array(3*GParams.count),a=new THREE.BufferAttribute(e,3),t=new THREE.Color(palette.middle),n=new THREE.Color(palette.border),s=n.clone();for(let a=0;a<3*GParams.count;a++){let o=3*a,i=Math.random()*GParams.radius,m=GParams.spin*i,d=(Math.random()-.5**GParams.randomnessLevel)*GParams.randomness*i,l=(Math.random()-.5**GParams.randomnessLevel)*GParams.randomness*i,c=(Math.random()-.5**GParams.randomnessLevel)*GParams.randomness*i,p=a%GParams.branches/GParams.branches*Math.PI*2;e[o]=Math.sin(p+m)*i+d,e[o+1]=l,e[o+2]=Math.cos(p+m)*i+c,s.lerpColors(t,n,i/GParams.radius/.3),r[o]=s.r,r[o+1]=s.g,r[o+2]=s.b}bufferGeometry.setAttribute("position",a),bufferGeometry.setAttribute("color",new THREE.BufferAttribute(r,3)),console.log("bufferGeometry",bufferGeometry),starMat=new THREE.PointsMaterial({vertexColors:GParams.color,size:GParams.size,sizeAttenuation:!0,depthWrite:!1,alphaMap:mat4,transparent:!0,blending:THREE.AdditiveBlending}),stars=new THREE.Points(bufferGeometry,starMat),scene.add(stars)};generateGalaxy(),window.addEventListener("resize",(()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const clock=new THREE.Clock,temp=new THREE.Vector3;function render(e){clock.getElapsedTime(),bufferGeometry.attributes.position.needsUpdate=!0,controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}render();