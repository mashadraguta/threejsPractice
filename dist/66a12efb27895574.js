import*as THREE from"three";import{camera,scene,renderer,sizes}from"./basics";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";const axesHelper=new THREE.AxesHelper(10);axesHelper.setColors("orange","green","blue");const controls=new OrbitControls(camera,renderer.domElement);let cubes=[];for(let e=0;e<50;e++){let e=new THREE.Mesh(new THREE.BoxGeometry,new THREE.MeshBasicMaterial({color:"green"}));e.position.set(THREE.MathUtils.randFloatSpread(12),THREE.MathUtils.randFloatSpread(12),THREE.MathUtils.randFloatSpread(12)),cubes.push(e)}scene.add(...cubes),console.log(cubes);const raycaster=new THREE.Raycaster,normalizedCoords=new THREE.Vector2(100,100);let targetX,targetY,targetXR,targetYR;const arrowHelper=new THREE.ArrowHelper;function render(e){raycaster.setFromCamera(normalizedCoords,camera);let r=raycaster.intersectObjects(cubes);r.length||cubes.forEach((e=>{e.material.color.set("orange")})),r.length&&(normalizedCoords.x==targetX?r[0].object.material.wireframe=!0:normalizedCoords.x==targetXR&&(r[0].object.material.wireframe=!1));for(const e of r)e.object.material.color.set("green");controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}window.addEventListener("mousemove",(e=>{normalizedCoords.x=e.clientX/window.innerWidth*2-1,normalizedCoords.y=-e.clientY/window.innerHeight*2+1})),window.addEventListener("click",(e=>{targetX=e.clientX/window.innerWidth*2-1,targetY=-e.clientY/window.innerHeight*2+1})),window.addEventListener("contextmenu",(e=>{targetXR=e.clientX/window.innerWidth*2-1,targetYR=-e.clientY/window.innerHeight*2+1})),window.addEventListener("resize",(e=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))})),render();