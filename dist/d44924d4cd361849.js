import*as THREE from"three";import{scene,camera,renderer}from"./basics";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls";import{GUI}from"dat.gui";const controls=new OrbitControls(camera,renderer.domElement),gui=new GUI,boxPos=gui.addFolder("box position"),helper=new THREE.AxesHelper(10);helper.setColors("blue","yellow","green"),scene.add(helper);const count=100,sphereMat=new THREE.MeshBasicMaterial({});sphereMat.side=THREE.DoubleSide,sphereMat.vertexColors=!0;const sphereVPositions=new Float32Array(300),sphereVColors=new Float32Array(300),sphereVNormals=new Float32Array(300),sphereVUV=new Float32Array(100),sphereBufferGeom=new THREE.BufferGeometry;for(let e=0;e<300;e++){let r=3*e;sphereVPositions[r]=1-15*Math.random(),sphereVPositions[r+1]=1-7*Math.random(),sphereVPositions[r+2]=1-7*Math.random(),sphereVColors[r]=Math.random(),sphereVColors[r+1]=Math.random(),sphereVColors[r+2]=Math.random(),sphereVNormals[r]=Math.random(),sphereVNormals[r+1]=Math.random(),sphereVNormals[r+2]=Math.random()}for(let e=0;e<100;e++)sphereVUV[e]=Math.random();const spherePosAtt=new THREE.BufferAttribute(sphereVPositions,3),sphereColorAtt=new THREE.BufferAttribute(sphereVColors,3),sphereNormalAtt=new THREE.BufferAttribute(sphereVNormals,3,{normalized:!0}),sphereUVAtt=new THREE.BufferAttribute(sphereVUV,2);sphereBufferGeom.setAttribute("position",spherePosAtt),sphereBufferGeom.setAttribute("color",sphereColorAtt),sphereBufferGeom.setAttribute("normal",sphereNormalAtt),sphereBufferGeom.setAttribute("uv",sphereUVAtt),console.log("sphereBufferGeom",sphereBufferGeom.attributes);const sphere=new THREE.Mesh(sphereBufferGeom,sphereMat);function render(e){controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}sphere.position.set(7,3,2),scene.add(sphere),render();