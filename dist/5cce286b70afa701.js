import*as THREE from"three";import{camera,scene,renderer}from"./basics";import{getGUIforLights}from"./utils";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";const axesHelper=new THREE.AxesHelper(2e3);axesHelper.setColors("green","purple","orange"),scene.add(axesHelper);const material=new THREE.MeshStandardMaterial,lightParamsDir={position:{x:0,y:10,z:0}},lightParamsPoint={position:{x:4,y:2,z:3}};renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap;const ambientLight=new THREE.AmbientLight("white",.2),directionalLight=new THREE.DirectionalLight("white",.5),pointLight=new THREE.PointLight("orange",.8);pointLight.visible=!1,pointLight.castShadow=!0,directionalLight.castShadow=!0,directionalLight.shadow.camera.near=2,directionalLight.shadow.camera.far=40,directionalLight.shadow.camera.left=-10,directionalLight.shadow.camera.right=10,directionalLight.shadow.camera.bottom=-10,directionalLight.shadow.camera.top=10,directionalLight.shadow.mapSize.width=1024,directionalLight.shadow.mapSize.height=1024;const helperDir=new THREE.CameraHelper(directionalLight.shadow.camera),helperPoint=new THREE.CameraHelper(pointLight.shadow.camera);helperDir.visible=!1,helperPoint.visible=!1,console.log("helper helperDir",helperDir),console.log("helper helperPoint",helperPoint),scene.add(helperDir),scene.add(helperPoint),getGUIforLights(lightParamsDir,"DIRECTIONAL LIGHT",directionalLight,helperDir),getGUIforLights(lightParamsPoint,"POINT LIGHT",pointLight,helperPoint),scene.add(directionalLight),scene.add(directionalLight.target),scene.add(ambientLight),scene.add(pointLight);const sphereG=new THREE.SphereGeometry(3,32,32),sphere=new THREE.Mesh(sphereG,material);sphere.castShadow=!0,sphere.position.set(-5,5,0);const torusG=new THREE.TorusGeometry,torus=new THREE.Mesh(torusG,material);torus.castShadow=!0,torus.position.set(0,5,0);const cubeG=new THREE.BoxGeometry(2,2,2),cube=new THREE.Mesh(cubeG,material);cube.castShadow=!0,cube.position.set(5,5,0);const planeG=new THREE.PlaneGeometry(20,20,32),planeM=new THREE.MeshPhongMaterial({color:"grey"}),plane=new THREE.Mesh(planeG,planeM);plane.receiveShadow=!0,plane.rotateX(-1.57),plane.position.set(0,0,0),scene.add(sphere),scene.add(torus),scene.add(cube),scene.add(plane);const controls=new OrbitControls(camera,renderer.domElement);window.addEventListener("resize",(e=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const clock=new THREE.Clock;function render(e){clock.getElapsedTime(),helperDir.update(),helperPoint.update(),controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}render();