import*as THREE from"three";import{camera,scene,renderer}from"./basics";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{GUI}from"dat.gui";import{changeObjPos}from"./utils";const axesHelper=new THREE.AxesHelper(2e3),controls=new OrbitControls(camera,renderer.domElement),gui=new GUI;renderer.shadowMap.enabled=!0;const textureLoader=new THREE.TextureLoader,textureGhost=textureLoader.load("textures/testTextures/SGroughness.png");textureLoader.setPath("textures/haunted-house/");const textureGrave=textureLoader.load("grave/1.jpg");textureLoader.setPath("textures/haunted-house/door/");const TDoorColor=textureLoader.load("color.jpg"),TDoorAlpha=textureLoader.load("alpha.jpg"),TDoorAmbientOcclusion=textureLoader.load("ambientOcclusion.jpg"),TDoorHeight=textureLoader.load("height.jpg"),TDoorMetalness=textureLoader.load("metalness.jpg"),TDoorNormal=textureLoader.load("normal.jpg"),TDoorRoughness=textureLoader.load("roughness.jpg");textureLoader.setPath("textures/haunted-house/bricks/");const TBrickAO=textureLoader.load("ambientOcclusion.jpg"),TBrickColor=textureLoader.load("color.jpg"),TBrickNormal=textureLoader.load("normal.jpg"),TBrickRoughness=textureLoader.load("roughness.jpg");textureLoader.setPath("textures/haunted-house/grass/");const TGrassAO=textureLoader.load("ambientOcclusion.jpg"),TGrassColor=textureLoader.load("color.jpg"),TGrassNormal=textureLoader.load("normal.jpg"),TGrassRoughness=textureLoader.load("roughness.jpg");TGrassColor.wrapS=THREE.RepeatWrapping,TGrassNormal.wrapS=THREE.RepeatWrapping,TGrassColor.wrapT=THREE.RepeatWrapping,TGrassNormal.wrapT=THREE.RepeatWrapping;const number=10;TGrassAO.repeat.set(10,10),TGrassColor.repeat.set(10,10);const initParams={position:{x:0,y:2.5,z:0},scale:1,rotateX:0,rotateY:0},initParamsMoon={position:{x:-15,y:13,z:10},intensity:.8},initParamsFarol={position:{x:-6.7,y:1.5,z:0},intensity:.8},farolLight=new THREE.PointLight("#ff7d46",.5,20),moonLight=new THREE.PointLight("#506886",.5),ambientLight=new THREE.AmbientLight("#506886",.2),farolLightHelper=new THREE.CameraHelper(farolLight.shadow.camera),moonLightHelper=new THREE.CameraHelper(moonLight.shadow.camera);moonLight.position.set(initParamsMoon.position.x,initParamsMoon.position.y,initParamsMoon.position.z),farolLight.position.set(initParamsFarol.position.x,initParamsFarol.position.y,initParamsFarol.position.z),changeObjPos(moonLight,initParamsMoon,gui,"moon light"),changeObjPos(farolLight,initParamsFarol,gui,"farol light");const ghost1Light=new THREE.PointLight("white",.3,20),ghost2Light=new THREE.PointLight("white",.2,20),ghost3Light=new THREE.PointLight("white",.5,10);ghost1Light.shadow.mapSize.width=128,ghost1Light.shadow.mapSize.height=128,ghost2Light.shadow.mapSize.width=128,ghost2Light.shadow.mapSize.height=128,ghost3Light.shadow.mapSize.width=128,ghost3Light.shadow.mapSize.height=128,ghost1Light.castShadow=!0,ghost2Light.castShadow=!0,ghost3Light.castShadow=!0;const ghostShape1=new THREE.Mesh(new THREE.BoxGeometry(3,3),new THREE.MeshStandardMaterial({map:textureGhost,transparent:!0,opacity:.3})),ghostShape2=new THREE.Mesh(new THREE.SphereGeometry(1,16,32),new THREE.MeshStandardMaterial({map:textureGhost,transparent:!0,opacity:.4})),ghostShape3=new THREE.Mesh(new THREE.OctahedronGeometry(2.5,2),new THREE.MeshStandardMaterial({map:textureGhost,transparent:!0,opacity:.7})),ghost1=new THREE.Group,ghost2=new THREE.Group,ghost3=new THREE.Group;ghost1.add(ghost1Light,ghostShape1),ghost2.add(ghost2Light,ghostShape2),ghost3.add(ghost3Light,ghostShape3),ghost1.position.set(10,10,2),ghost2.position.set(-25,3,5),ghost3.position.set(-15,7,5),scene.add(ghost1,ghost2,ghost3);const wallMat=new THREE.MeshStandardMaterial({map:TBrickColor,aoMap:TBrickAO,normalMap:TBrickNormal,transparent:!0}),grassMat=new THREE.MeshStandardMaterial({map:TGrassColor,aoMap:TGrassAO,normalMap:TGrassNormal,transparent:!0}),doorMat=new THREE.MeshStandardMaterial({alphaMap:TDoorAlpha,color:"#543200",aoMap:TDoorAmbientOcclusion,displacementMap:TDoorHeight,displacementScale:.1,normalMap:TDoorNormal,opacity:.7,transparent:!0}),roofMat=new THREE.MeshStandardMaterial({color:"#148785"}),bushMat=new THREE.MeshStandardMaterial({color:"#ae9cff",transparent:!0,opacity:.9}),hauntedHouse=new THREE.Group,walls=new THREE.Mesh(new THREE.BoxGeometry(7,8,7,100,100),wallMat),roof=new THREE.Mesh(new THREE.ConeGeometry(6,5,8),roofMat),bush=new THREE.Mesh(new THREE.ConeGeometry(.5,5,4),bushMat);walls.geometry.setAttribute("uv2",new THREE.BufferAttribute(walls.geometry.attributes.uv.array,2)),walls.position.set(0,-.5,0);const bush1=bush.clone(),bush2=bush.clone(),bush3=bush.clone(),bush4=bush.clone(),bushes=new THREE.Group;bush1.position.set(-4.5,-2,-2),bush2.position.set(-4.5,-2,2),bush4.position.set(-4.5,-2,-3),bush3.position.set(-4.5,-2,.5),bush2.scale.set(1.75,1.75,1.75),bush4.scale.set(1.5,1.5,1.5),bush1.scale.set(1.5,1.5,1.5),bushes.add(bush1,bush2,bush3,bush4);const bushes2=bushes.clone();bushes2.castShadow=!0,bushes2.rotateY(.5*Math.PI),bushes2.scale.set(5,5,5),bushes2.position.set(0,0,2),roof.position.set(0,5.1,0);const house=new THREE.Group;house.rotateX(.05*Math.PI),house.add(walls,roof);const graves=new THREE.Group,demoCircleBig=new THREE.Mesh(new THREE.CircleGeometry(40,32),new THREE.MeshBasicMaterial({wireframe:!0})),demoCircleSmall=new THREE.Mesh(new THREE.CircleGeometry(7,32),new THREE.MeshBasicMaterial({wireframe:!0}));demoCircleBig.position.set(0,1,0),demoCircleSmall.position.set(0,1.2,0),demoCircleBig.rotateX(.5*-Math.PI),demoCircleSmall.rotateX(.5*-Math.PI),demoCircleBig.visible=!1,demoCircleSmall.visible=!1,demoCircleBig.geometry.computeBoundingSphere(),demoCircleSmall.geometry.computeBoundingSphere();const graveGeom=new THREE.BoxGeometry(1,3,1.3),graveMat=new THREE.MeshStandardMaterial({map:textureGrave}),bigBoundingSphere=demoCircleBig.geometry.boundingSphere,smallBoundingSphere=demoCircleSmall.geometry.boundingSphere;for(let e=0;e<=100;e++){const e=[],t=[],o=new THREE.Mesh(graveGeom,graveMat);o.castShadow=!0,o.position.set(THREE.MathUtils.randFloatSpread(100),-1.5,THREE.MathUtils.randFloatSpread(100)),bigBoundingSphere.containsPoint(o.position)&&!smallBoundingSphere.containsPoint(o.position)?e.push(o):t.push(o),e.forEach((e=>{e.rotateX(Math.PI*THREE.MathUtils.randFloatSpread(1e3))})),graves.add(...e)}hauntedHouse.add(house,bushes,graves,farolLight,moonLight,ambientLight),hauntedHouse.position.set(initParams.position.x,initParams.position.y,initParams.position.z),hauntedHouse.rotateX(initParams.rotateX),hauntedHouse.rotateY(initParams.rotateY);const plane=new THREE.Mesh(new THREE.PlaneGeometry(100,100,50,50),grassMat);plane.geometry.setAttribute("uv2",new THREE.BufferAttribute(plane.geometry.attributes.uv.array,2)),plane.geometry.rotateX(.5*-Math.PI),plane.receiveShadow=!0,walls.castShadow=!0,scene.add(plane),scene.add(hauntedHouse);const fog=new THREE.Fog(2500663,0,50);scene.fog=fog,walls.geometry.computeBoundingSphere();const BShouse=walls.geometry.boundingSphere;console.log(BShouse);const clock=new THREE.Clock;function render(e){const t=clock.getElapsedTime();ghost2.position.x=34*Math.sin(.5*t),ghost2.position.y=3*Math.tan(Math.cos(.5*t))+5,ghost2.position.z=34*Math.cos(.5*t),ghost1.position.x=25*Math.sin(.5*t)+(10+24*Math.sin(.7*t)),ghost1.position.y=3*Math.tan(Math.cos(.5*t))+5,ghost1.position.z=25*-Math.cos(.5*t),ghost3.position.x=25*Math.sin(.5*t),ghost3.position.y=3*Math.tan(Math.cos(.5*t)),ghost3.position.z=25*Math.sin(.5*t)+(2+24*Math.sin(.7*t)),camera.position.x=25*Math.sin(.5*t),camera.position.y=5,camera.position.z=15*Math.cos(.5*t)+2+15*Math.sin(.5*t),controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}render();