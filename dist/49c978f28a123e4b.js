import*as THREE from"three";import{axesHelper,MTorus,MPlane,MSphere}from"./objects";import{camera,scene,canvas,renderer}from"./basics";import{MapControls}from"three/examples/jsm/controls/OrbitControls.js";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{TextGeometry}from"three/examples/jsm/geometries/TextGeometry.js";import{FontLoader}from"three/examples/jsm/loaders/FontLoader.js";const matCapTexture1=(new THREE.TextureLoader).load("/textures/matcaps/3.png"),matCapTexture2=(new THREE.TextureLoader).load("/textures/pinkdonut.png"),loader=new FontLoader;let text,textGeometry,texture;loader.load("fonts/Harry P_Regular.json",(function(e){textGeometry=new TextGeometry(" \n    Succesfully deployed project\n    ",{font:e,size:1,height:1,curveSegments:1,depth:1,curveSegments:1,bevelEnabled:!0,bevelThickness:.1,bevelSize:.01,bevelOffset:.01,bevelSegments:2}),texture=new THREE.MeshMatcapMaterial({matcap:matCapTexture1}),text=new THREE.Mesh(textGeometry,texture),console.log("geometry ONE======>",textGeometry.boundingBox),textGeometry.center(),scene.add(text)})),console.time("rendering scene");const geometry=new THREE.TorusGeometry(.3,.2,20,45),material=new THREE.MeshBasicMaterial({map:matCapTexture2});for(let e=0;e<1e3;e++){const e=new THREE.Mesh(geometry,material),t=Math.max(15*(Math.random()-.5),1);e.rotateX(100*(Math.random()-.5)),e.rotateY(100*(Math.random()-.5)),e.position.set(200*(Math.random()-.5),100*(Math.random()-.5),100*-(Math.random()-.5)),e.scale.set(t,t,t),scene.add(e)}console.timeEnd("rendering scene");const controls=new MapControls(camera,renderer.domElement);controls.enableZoom=!0,controls.enableDamping=!0,window.addEventListener("resize",(e=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))})),window.addEventListener("dblclick",(e=>{document.fullscreenElement||document.webkitFullscreenElement?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen():canvas.requestFullscreen?canvas.requestFullscreen():canvas.webkitRequestFullscreen&&canvas.webkitRequestFullscreen()}));const clock=new THREE.Clock;function render(e){clock.getElapsedTime(),controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}render();