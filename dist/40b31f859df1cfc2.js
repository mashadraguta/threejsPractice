import*as THREE from"three";import{camera,scene,renderer}from"./basics";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{GUI}from"dat.gui";const axesHelper=new THREE.AxesHelper(2e3);axesHelper.setColors("green","purple","orange");const gui=new GUI,lightParamsDir={position:{x:40,y:2.5,z:8}},ambientLight=new THREE.AmbientLight("white",.2),directionalLight=new THREE.DirectionalLight("white",.8),directionalHelper=new THREE.DirectionalLightHelper(directionalLight);scene.add(directionalHelper);const getGUIforLights=(e,i,n,t)=>{const r=e.position;n.position.set(r.x,r.y,r.z);const o=gui.addFolder(i);o.add(n,"intensity").min(.1).max(2).step(.01),o.add(n,"visible"),t&&o.add(t,"visible").name("helper"),o.add(r,"x").min(-50).max(50).step(.1).onChange((()=>{n.position.set(r.x,r.y,r.z)})),o.add(r,"y").min(-50).max(50).step(.1).onChange((()=>{n.position.set(r.x,r.y,r.z)})),o.add(r,"z").min(-50).max(50).step(.1).onChange((()=>{n.position.set(r.x,r.y,r.z)})),n==spotLight&&(o.add(n,"angle").min(.1*Math.PI).max(2*Math.PI).step(.01),o.add(n,"distance").min(0).max(10).step(.01))};getGUIforLights(lightParamsDir,"DIRECTIONAL LIGHT",directionalLight,directionalHelper),scene.add(directionalLight),scene.add(ambientLight);const planeG=new THREE.PlaneGeometry(30,40);material.side=THREE.DoubleSide;const plane=new THREE.Mesh(planeG,material);plane.rotateX(-1.5),plane.position.set(0,.5,0);const sphereG=new THREE.SphereGeometry(1,32,32),sphere=new THREE.Mesh(sphereG,material);sphere.position.set(-5,5,-2),scene.add(plane),scene.add(sphere);const controls=new OrbitControls(camera,renderer.domElement);window.addEventListener("resize",(e=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const clock=new THREE.Clock;function render(e){clock.getElapsedTime(),controls.update(),window.requestAnimationFrame(render),renderer.render(scene,camera)}render();